version: '3.4'

services:
  ocelot.gateway:
    image: ${DOCKER_REGISTRY-}ocelotgateway
    build:
      context: .
      dockerfile: ApiGateway/Ocelot.ApiGateway/Dockerfile
    ports:
      - "8080:80"
    environment:
      - Authentication__Authority=${AUTHORITY_URL}
      - Jaeger__Host=jaeger
      - Jaeger__Port=6831
    depends_on:
      - identity-server
      - orderservice
      - notificationservice
      - jaeger
    volumes:
      - ./ApiGateway/Ocelot.ApiGateway/ocelot.json:/app/ocelot.json # Bind the Ocelot configuration file
  
  identity-server:
    image: ${DOCKER_REGISTRY-}identityserver
    build:
      context: .
      dockerfile: IdentityServer/Dockerfile
    ports:
      - "5001:5001"
    environment:
      - Jaeger__Host=jaeger
      - Jaeger__Port=6831
    depends_on:
      - jaeger

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5002:5672"
      - "5003:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  
  jaeger:
    image: jaegertracing/all-in-one:1.41
    ports:
      - "5004:16686" # Jaeger UI
      - "5005:6831/udp" # Jaeger agent UDP
      - "5006:6832/udp" # Jaeger agent UDP for internal services
      - "5007:5778" # Configuration service
      - "5008:14268" # HTTP for span submission
      - "5009:14250" # gRPC for span submission
      - "5010:9411"   # Zipkin-compatible endpoint

  orderservice:
    image: ${DOCKER_REGISTRY-}orderservice
    build:
      context: .
      dockerfile: OrderService/OrderService.Api/Dockerfile
    ports:
      - "6001:6001"
    depends_on:
      - rabbitmq
      - order-write-db
      - order-read-db
      - jaeger

    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - Authentication__Authority=${AUTHORITY_URL}
      - ConnectionStrings__OrderWriteDbContext=Host=order-write-db;Database=orders;Username=${ORDER_DB_USER};Password=${ORDER_DB_PASSWORD}
      - ConnectionStrings__OrderReadDbContext=Host=order-read-db;Database=orders;Username=${ORDER_DB_USER};Password=${ORDER_DB_PASSWORD}
      - RabbitMQ__HostName=rabbitmq
      - Jaeger__Host=jaeger
      - Jaeger__Port=6831

  order-write-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "${ORDER_DB_PASSWORD}"
      ACCEPT_EULA: "Y"
    ports:
      - "6002:1433"

  order-read-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "${ORDER_DB_PASSWORD}"
      ACCEPT_EULA: "Y"
    ports:
      - "6003:1433"

  notificationservice:
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: .
      dockerfile: NotificationService/NotificationService.Api/Dockerfile
    ports:
      - "6004:8080"
    depends_on:
      - rabbitmq
      - jaeger
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - RabbitMQ__HostName=rabbitmq
      - Jaeger__Host=jaeger
      - Jaeger__Port=6831